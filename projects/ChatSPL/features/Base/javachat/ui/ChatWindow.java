package javachat.ui;

import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javachat.network.Client;
import javachat.JavaChat;
import javax.swing.WindowConstants;
import javax.swing.BoundedRangeModel;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.LayoutStyle;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JToggleButton;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.GroupLayout;
import java.awt.Color;
import javax.swing.JColorChooser;
import java.awt.Font;
import javax.swing.JComboBox;
import java.awt.GraphicsEnvironment;

public class ChatWindow extends JFrame {

	static final long serialVersionUID = 0;
	private ButtonGroup buttonGroupModeType;
	private JButton jButtonSend;
	private JLabel jLabel1;
	private JLabel jLabelHost;
	private JLabel jLabelPort;
	private JRadioButton jRadioButtonClient;
	private JRadioButton jRadioButtonServer;
	private JScrollPane jScrollPane1;
	private JTextArea jTextAreaChat;
	private JTextField jTextFieldHostname;
	private JTextField jTextFieldMessage;
	private JTextField jTextFieldName;
	private JTextField jTextFieldPort;
	private JToggleButton jToggleButtonOnline;
	private GroupLayout layout;
	private SequentialGroup midHorizontal;
	private SequentialGroup topHorizontal;
	private SequentialGroup botHorizontal;
	private ParallelGroup midVertical;
	private ParallelGroup topVertical;
	private ParallelGroup botVertical;

	/**
	 * Creates new form ChatWindow
	 */
	public ChatWindow() {
		this.layout = new GroupLayout(getContentPane());

		this.midHorizontal = layout.createSequentialGroup();
		this.topHorizontal = layout.createSequentialGroup();
		this.botHorizontal = layout.createSequentialGroup();
		this.midVertical = layout.createParallelGroup();
		this.topVertical = layout.createParallelGroup();
		this.botVertical = layout.createParallelGroup();

		initComponents();
		this.setTitle("Java Chat");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		buttonGroupModeType = new ButtonGroup();
		jRadioButtonServer = new JRadioButton();
		jRadioButtonClient = new JRadioButton();
		jLabelHost = new JLabel();
		jTextFieldHostname = new JTextField();
		jLabelPort = new JLabel();
		jTextFieldPort = new JTextField();
		jToggleButtonOnline = new JToggleButton();
		jTextFieldMessage = new JTextField();
		jScrollPane1 = new JScrollPane();
		jTextAreaChat = new JTextArea();
		jButtonSend = new JButton();
		jTextFieldName = new JTextField();
		jLabel1 = new JLabel();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		buttonGroupModeType.add(jRadioButtonServer);
		jRadioButtonServer.setText("Server");
		jRadioButtonServer.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButtonServerActionPerformed(evt);
			}
		});

		buttonGroupModeType.add(jRadioButtonClient);
		jRadioButtonClient.setSelected(true);
		jRadioButtonClient.setText("Client");
		jRadioButtonClient.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButtonClientActionPerformed(evt);
			}
		});

		jLabelHost.setText("Host:");
		jTextFieldHostname.setText("localhost");
		jLabelPort.setText("Port:");
		jTextFieldPort.setText("12345");

		jToggleButtonOnline.setText("Connect");
		jToggleButtonOnline.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jToggleButtonOnlineActionPerformed(evt);
			}
		});

		jTextFieldMessage.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				jTextFieldMessageKeyTyped(evt);
			}
		});

		jTextAreaChat.setColumns(20);
		jTextAreaChat.setEditable(false);
		jTextAreaChat.setRows(5);
		jScrollPane1.setViewportView(jTextAreaChat);

		jButtonSend.setText("Send");
		jButtonSend.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonSendActionPerformed(evt);
			}
		});

		jTextFieldName.setText("Unknown");
		jLabel1.setText("Name:");

		getContentPane().setLayout(layout);

		layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(jScrollPane1)
				.addGroup(layout.createSequentialGroup().addComponent(jTextFieldMessage)
						.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonSend)
						.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))

				.addGroup(topHorizontal).addGroup(midHorizontal).addGroup(botHorizontal)

				.addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout
						.createParallelGroup(GroupLayout.Alignment.TRAILING)
						.addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(jLabel1)
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(jTextFieldName))
						.addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()

						).addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(jRadioButtonServer).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(jRadioButtonClient).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 255, Short.MAX_VALUE).addComponent(jLabelHost).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(jTextFieldHostname, GroupLayout.PREFERRED_SIZE, 221, GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabelPort).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(jTextFieldPort, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE))).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)

								.addComponent(jToggleButtonOnline, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE))));

		layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(jRadioButtonServer)
						.addComponent(jRadioButtonClient).addComponent(jToggleButtonOnline)
						.addComponent(jTextFieldHostname, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabelHost).addComponent(jLabelPort).addComponent(jTextFieldPort,
								GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout
						.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(jTextFieldName,
								GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel1))

				.addGroup(topVertical)

				.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
				.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(jTextFieldMessage,
						GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jButtonSend))

				.addGroup(midVertical).addGroup(botVertical)

				.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE))));

		pack();

	}

	private void jRadioButtonServerActionPerformed(java.awt.event.ActionEvent evt) {
		jTextFieldHostname.setEnabled(false);
	}

	private void jRadioButtonClientActionPerformed(java.awt.event.ActionEvent evt) {
		jTextFieldHostname.setEnabled(true);
	}

	private void jToggleButtonOnlineActionPerformed(java.awt.event.ActionEvent evt) {
		if (jToggleButtonOnline.isSelected()) {
			boolean connected = false;
			String name = jTextFieldName.getText();

			// Connect
			if (jRadioButtonServer.isSelected()) {
				// Server
				connected = JavaChat.startServer(jTextFieldPort.getText(), name);
			} else {
				// Client
				connected = JavaChat.startClient(jTextFieldHostname.getText(), jTextFieldPort.getText(), name);
			}

			lockServerDetails(connected);
			jToggleButtonOnline.setSelected(connected);
		} else {
			// Disconnect the client/server
			JavaChat.disconnect();
			// Unlock the server details so we can change them before connecting
			// again
			lockServerDetails(false);
		}
	}

	private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt) {
		Client client = JavaChat.getClient();
		if (client != null && client.isConnected()) {
			String msg = jTextFieldMessage.getText();
			if (!msg.equals("")) {
				jTextFieldMessage.setText("");
				client.sendMsg(msg);
			}
		} else {
			println("Not connected: Unable to send message.");
		}
	}

	private void jTextFieldMessageKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldMessageKeyTyped
		if (evt.getKeyChar() == '\n') {
			jButtonSend.doClick();
		}
	}

	private void lockServerDetails(boolean lock) {
		jRadioButtonServer.setEnabled(!lock);
		jRadioButtonClient.setEnabled(!lock);
		jTextFieldHostname.setEnabled(!lock && !jRadioButtonServer.isSelected());
		jTextFieldPort.setEnabled(!lock);
	}

	/**
	 * Resets form when an unexpected disconnect happens
	 */
	public void disconnected() {
		lockServerDetails(false);
		jToggleButtonOnline.setSelected(false);
	}

	public void print(final String text) {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				jTextAreaChat.append(text);

				JScrollBar scrollBar = jScrollPane1.getVerticalScrollBar();
				boolean scrollBarAtBottom = isScrollBarFullyExtended(scrollBar);
				if (scrollBarAtBottom) {
					scrollToBottom(jTextAreaChat);
				}
			}
		});
	}

	public static boolean isScrollBarFullyExtended(JScrollBar vScrollBar) {
		BoundedRangeModel model = vScrollBar.getModel();
		int bottomPos = model.getExtent() + model.getValue() + 10;
		int maxPos = model.getMaximum();
		return bottomPos >= maxPos;
	}

	public static void scrollToBottom(JComponent component) {
		Rectangle visibleRect = component.getVisibleRect();
		visibleRect.y = component.getHeight() - visibleRect.height;
		component.scrollRectToVisible(visibleRect);
	}

	public void println(final String text) {
		print(text + "\n");
	}

	private String[] getFontsizeComboBoxList() {
		String num[] = new String[100];
		for (int i = 0; i < 100; i++) {
			num[i] = Integer.toString(i);
		}
		return num;
	}

	private String[] getfonttypeComboBoxList() {
		return GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
	}

}
